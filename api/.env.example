# UNCOMMENT FOR LOCAL AWS AND RUN DOCKER COMPOSE UP to create local aws setup

# Mandatory variables
# EMULATED=true
# PORT=3010
# LOCAL_GOOGLE_TOKEN="mock-google-token"
# NODE_ENV=development
# GOOGLE_CLIENT_ID=""
# DB_HOST=localhost  # MySQL is running in Docker, accessible via localhost
# DB_USER=root
# DB_PASS=root
# DB_NAME=codepushdb
# STORAGE_PROVIDER=aws
# AWS_ACCESS_KEY_ID=localstack
# AWS_SECRET_ACCESS_KEY=localstack
# S3_ENDPOINT=http://localhost:4566  # LocalStack S3 endpoint on localhost
# REDIS_HOST=localhost  # Redis is running in Docker, accessible via localhost
# REDIS_PORT=6379
# GOOGLE_CLIENT_ID=<your-client-id-here>
# GOOGLE_CLIENT_SECRET=<client-secret-here>
# CLOUDFRONT_DOMAIN=<-->
# CLOUDFRONT_KEY_PAIR_ID=<-->

# UNCOMMENT FOR LOCAL AZURE 
# Run to create start the Azurite emulator to provide local Azure Storage emulation
# npx azurite -s -l ./azurite-storage --tableHost 127.0.0.1 --tablePort 10002 --queueHost 127.0.0.1 --queuePort 10001 --blobHost 127.0.0.1 --blobPort 10000
# seed the azure seed to node run 
# cd ./api/script/storage && node seedDataAzure.ts

# EMULATED=true
# STORAGE_PROVIDER=azure
# AZURE_STORAGE_ACCOUNT=devstoreaccount1
# AZURE_STORAGE_ACCESS_KEY=
# REDIS_HOST=localhost
# REDIS_PORT=6379
# DB_HOST=localhost
# DB_USER=root
# DB_PASS=root
# DB_NAME=codepushdb
# PORT=3010
